// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/calculator.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Calculator struct {
	Operand1             int32    `protobuf:"varint,1,opt,name=operand1,proto3" json:"operand1,omitempty"`
	Operand2             int32    `protobuf:"varint,2,opt,name=operand2,proto3" json:"operand2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Calculator) Reset()         { *m = Calculator{} }
func (m *Calculator) String() string { return proto.CompactTextString(m) }
func (*Calculator) ProtoMessage()    {}
func (*Calculator) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{0}
}

func (m *Calculator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calculator.Unmarshal(m, b)
}
func (m *Calculator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calculator.Marshal(b, m, deterministic)
}
func (m *Calculator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calculator.Merge(m, src)
}
func (m *Calculator) XXX_Size() int {
	return xxx_messageInfo_Calculator.Size(m)
}
func (m *Calculator) XXX_DiscardUnknown() {
	xxx_messageInfo_Calculator.DiscardUnknown(m)
}

var xxx_messageInfo_Calculator proto.InternalMessageInfo

func (m *Calculator) GetOperand1() int32 {
	if m != nil {
		return m.Operand1
	}
	return 0
}

func (m *Calculator) GetOperand2() int32 {
	if m != nil {
		return m.Operand2
	}
	return 0
}

type CalculatorRequest struct {
	Calculator           *Calculator `protobuf:"bytes,1,opt,name=calculator,proto3" json:"calculator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CalculatorRequest) Reset()         { *m = CalculatorRequest{} }
func (m *CalculatorRequest) String() string { return proto.CompactTextString(m) }
func (*CalculatorRequest) ProtoMessage()    {}
func (*CalculatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{1}
}

func (m *CalculatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatorRequest.Unmarshal(m, b)
}
func (m *CalculatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatorRequest.Marshal(b, m, deterministic)
}
func (m *CalculatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatorRequest.Merge(m, src)
}
func (m *CalculatorRequest) XXX_Size() int {
	return xxx_messageInfo_CalculatorRequest.Size(m)
}
func (m *CalculatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatorRequest proto.InternalMessageInfo

func (m *CalculatorRequest) GetCalculator() *Calculator {
	if m != nil {
		return m.Calculator
	}
	return nil
}

type CalculatorResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculatorResponse) Reset()         { *m = CalculatorResponse{} }
func (m *CalculatorResponse) String() string { return proto.CompactTextString(m) }
func (*CalculatorResponse) ProtoMessage()    {}
func (*CalculatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{2}
}

func (m *CalculatorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatorResponse.Unmarshal(m, b)
}
func (m *CalculatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatorResponse.Marshal(b, m, deterministic)
}
func (m *CalculatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatorResponse.Merge(m, src)
}
func (m *CalculatorResponse) XXX_Size() int {
	return xxx_messageInfo_CalculatorResponse.Size(m)
}
func (m *CalculatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatorResponse proto.InternalMessageInfo

func (m *CalculatorResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeRequest) Reset()         { *m = PrimeRequest{} }
func (m *PrimeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeRequest) ProtoMessage()    {}
func (*PrimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{3}
}

func (m *PrimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeRequest.Unmarshal(m, b)
}
func (m *PrimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeRequest.Merge(m, src)
}
func (m *PrimeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeRequest.Size(m)
}
func (m *PrimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeRequest proto.InternalMessageInfo

func (m *PrimeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeResponse) Reset()         { *m = PrimeResponse{} }
func (m *PrimeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeResponse) ProtoMessage()    {}
func (*PrimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{4}
}

func (m *PrimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeResponse.Unmarshal(m, b)
}
func (m *PrimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeResponse.Merge(m, src)
}
func (m *PrimeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeResponse.Size(m)
}
func (m *PrimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeResponse proto.InternalMessageInfo

func (m *PrimeResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type AvgRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgRequest) Reset()         { *m = AvgRequest{} }
func (m *AvgRequest) String() string { return proto.CompactTextString(m) }
func (*AvgRequest) ProtoMessage()    {}
func (*AvgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{5}
}

func (m *AvgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgRequest.Unmarshal(m, b)
}
func (m *AvgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgRequest.Marshal(b, m, deterministic)
}
func (m *AvgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgRequest.Merge(m, src)
}
func (m *AvgRequest) XXX_Size() int {
	return xxx_messageInfo_AvgRequest.Size(m)
}
func (m *AvgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvgRequest proto.InternalMessageInfo

func (m *AvgRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AvgResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgResponse) Reset()         { *m = AvgResponse{} }
func (m *AvgResponse) String() string { return proto.CompactTextString(m) }
func (*AvgResponse) ProtoMessage()    {}
func (*AvgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{6}
}

func (m *AvgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgResponse.Unmarshal(m, b)
}
func (m *AvgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgResponse.Marshal(b, m, deterministic)
}
func (m *AvgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgResponse.Merge(m, src)
}
func (m *AvgResponse) XXX_Size() int {
	return xxx_messageInfo_AvgResponse.Size(m)
}
func (m *AvgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AvgResponse proto.InternalMessageInfo

func (m *AvgResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type FindMaxRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxRequest) Reset()         { *m = FindMaxRequest{} }
func (m *FindMaxRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaxRequest) ProtoMessage()    {}
func (*FindMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{7}
}

func (m *FindMaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxRequest.Unmarshal(m, b)
}
func (m *FindMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxRequest.Marshal(b, m, deterministic)
}
func (m *FindMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxRequest.Merge(m, src)
}
func (m *FindMaxRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaxRequest.Size(m)
}
func (m *FindMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxRequest proto.InternalMessageInfo

func (m *FindMaxRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type FindMaxResponse struct {
	Result               int32    `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxResponse) Reset()         { *m = FindMaxResponse{} }
func (m *FindMaxResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaxResponse) ProtoMessage()    {}
func (*FindMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{8}
}

func (m *FindMaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxResponse.Unmarshal(m, b)
}
func (m *FindMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxResponse.Marshal(b, m, deterministic)
}
func (m *FindMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxResponse.Merge(m, src)
}
func (m *FindMaxResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaxResponse.Size(m)
}
func (m *FindMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxResponse proto.InternalMessageInfo

func (m *FindMaxResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Calculator)(nil), "calculator.Calculator")
	proto.RegisterType((*CalculatorRequest)(nil), "calculator.CalculatorRequest")
	proto.RegisterType((*CalculatorResponse)(nil), "calculator.CalculatorResponse")
	proto.RegisterType((*PrimeRequest)(nil), "calculator.primeRequest")
	proto.RegisterType((*PrimeResponse)(nil), "calculator.primeResponse")
	proto.RegisterType((*AvgRequest)(nil), "calculator.avgRequest")
	proto.RegisterType((*AvgResponse)(nil), "calculator.avgResponse")
	proto.RegisterType((*FindMaxRequest)(nil), "calculator.findMaxRequest")
	proto.RegisterType((*FindMaxResponse)(nil), "calculator.findMaxResponse")
}

func init() { proto.RegisterFile("pb/calculator.proto", fileDescriptor_82e2d3384312a837) }

var fileDescriptor_82e2d3384312a837 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x5d, 0x4b, 0xf3, 0x40,
	0x10, 0x85, 0xdf, 0xe4, 0xd5, 0x22, 0x53, 0xad, 0x38, 0x42, 0x8d, 0x11, 0x45, 0x82, 0x1f, 0x15,
	0xa4, 0xd6, 0x08, 0xde, 0x6b, 0x6b, 0x6f, 0xfc, 0x40, 0xda, 0x3b, 0xef, 0x92, 0x74, 0x2c, 0x81,
	0x6e, 0x76, 0xdd, 0x64, 0x8b, 0x7f, 0xd0, 0xff, 0x25, 0x26, 0x4d, 0xb2, 0xa1, 0x2d, 0xb9, 0x9c,
	0x3d, 0x27, 0xcf, 0x1c, 0x0e, 0x13, 0xd8, 0x17, 0xfe, 0x4d, 0xe0, 0xcd, 0x02, 0x35, 0xf3, 0x12,
	0x2e, 0xbb, 0x42, 0xf2, 0x84, 0x23, 0x94, 0x2f, 0xce, 0x00, 0xa0, 0x5f, 0x4c, 0x68, 0xc3, 0x16,
	0x17, 0x24, 0xbd, 0x68, 0x72, 0x6b, 0x19, 0xa7, 0x46, 0x67, 0x73, 0x54, 0xcc, 0x9a, 0xe6, 0x5a,
	0x66, 0x45, 0x73, 0x9d, 0x67, 0xd8, 0x2b, 0x29, 0x23, 0xfa, 0x52, 0x14, 0x27, 0x78, 0x0f, 0xda,
	0xa2, 0x14, 0xd7, 0x74, 0xdb, 0x5d, 0x2d, 0x8d, 0xf6, 0x89, 0x1e, 0xe9, 0x1a, 0x50, 0x87, 0xc5,
	0x82, 0x47, 0x31, 0x61, 0x1b, 0x1a, 0x92, 0x62, 0x35, 0x4b, 0x16, 0xc1, 0x16, 0x93, 0x73, 0x01,
	0xdb, 0x42, 0x86, 0x8c, 0xf2, 0xad, 0x6d, 0x68, 0x44, 0x8a, 0xf9, 0x24, 0x73, 0x5f, 0x36, 0x39,
	0x97, 0xb0, 0xb3, 0xf0, 0xd5, 0x00, 0xcf, 0x00, 0xbc, 0xf9, 0xb4, 0x0e, 0x77, 0x0e, 0xcd, 0xd4,
	0x55, 0x03, 0xeb, 0x40, 0xeb, 0x33, 0x8c, 0x26, 0xaf, 0xde, 0x77, 0x1d, 0xf0, 0x0a, 0x76, 0x0b,
	0xe7, 0x12, 0xd4, 0xd4, 0xa1, 0xee, 0x8f, 0xa9, 0xd7, 0x3d, 0x26, 0x39, 0x0f, 0x03, 0xc2, 0x21,
	0xfc, 0x1f, 0x2b, 0x86, 0xc7, 0x6b, 0x1a, 0xce, 0xd6, 0xdb, 0x27, 0xeb, 0xe4, 0x6c, 0xa7, 0xf3,
	0x0f, 0xc7, 0x60, 0xbd, 0xff, 0x15, 0xf5, 0x96, 0xe6, 0x1a, 0x50, 0xc0, 0x99, 0xe0, 0x71, 0x98,
	0x84, 0x3c, 0x42, 0xab, 0x5b, 0x39, 0xa6, 0xb2, 0x76, 0xfb, 0x70, 0x85, 0x92, 0x23, 0x7b, 0x06,
	0x3e, 0x41, 0xab, 0xcf, 0x99, 0x50, 0x09, 0x3d, 0xcc, 0x49, 0x7a, 0x53, 0xc2, 0xca, 0x25, 0x94,
	0x85, 0xdb, 0x07, 0x4b, 0xef, 0x39, 0xa6, 0x63, 0xe0, 0x0b, 0x34, 0x87, 0x59, 0x49, 0x21, 0x53,
	0x0c, 0x6d, 0xdd, 0x5b, 0xed, 0xd9, 0x3e, 0x5a, 0xa9, 0x95, 0xac, 0x9e, 0xf1, 0xb8, 0xf1, 0x61,
	0x0a, 0xdf, 0x6f, 0xa4, 0x3f, 0xc5, 0xdd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x2b, 0xfe,
	0xe1, 0x2b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	// Sum
	Sum(ctx context.Context, in *CalculatorRequest, opts ...grpc.CallOption) (*CalculatorResponse, error)
	// Server Streaming
	PrimeNumberDecomposition(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompositionClient, error)
	//client Streaming
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputeAverageClient, error)
	// Bi Directional Streaming
	FindMaximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_FindMaximumClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *CalculatorRequest, opts ...grpc.CallOption) (*CalculatorResponse, error) {
	out := new(CalculatorResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeNumberDecomposition(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeNumberDecompositionClient interface {
	Recv() (*PrimeResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimeNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeNumberDecompositionClient) Recv() (*PrimeResponse, error) {
	m := new(PrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceComputeAverageClient{stream}
	return x, nil
}

type CalculatorService_ComputeAverageClient interface {
	Send(*AvgRequest) error
	CloseAndRecv() (*AvgResponse, error)
	grpc.ClientStream
}

type calculatorServiceComputeAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceComputeAverageClient) Send(m *AvgRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceComputeAverageClient) CloseAndRecv() (*AvgResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AvgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) FindMaximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_FindMaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/FindMaximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceFindMaximumClient{stream}
	return x, nil
}

type CalculatorService_FindMaximumClient interface {
	Send(*FindMaxRequest) error
	Recv() (*FindMaxResponse, error)
	grpc.ClientStream
}

type calculatorServiceFindMaximumClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceFindMaximumClient) Send(m *FindMaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceFindMaximumClient) Recv() (*FindMaxResponse, error) {
	m := new(FindMaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	// Sum
	Sum(context.Context, *CalculatorRequest) (*CalculatorResponse, error)
	// Server Streaming
	PrimeNumberDecomposition(*PrimeRequest, CalculatorService_PrimeNumberDecompositionServer) error
	//client Streaming
	ComputeAverage(CalculatorService_ComputeAverageServer) error
	// Bi Directional Streaming
	FindMaximum(CalculatorService_FindMaximumServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *CalculatorRequest) (*CalculatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) PrimeNumberDecomposition(req *PrimeRequest, srv CalculatorService_PrimeNumberDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumberDecomposition not implemented")
}
func (*UnimplementedCalculatorServiceServer) ComputeAverage(srv CalculatorService_ComputeAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputeAverage not implemented")
}
func (*UnimplementedCalculatorServiceServer) FindMaximum(srv CalculatorService_FindMaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method FindMaximum not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*CalculatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeNumberDecomposition(m, &calculatorServicePrimeNumberDecompositionServer{stream})
}

type CalculatorService_PrimeNumberDecompositionServer interface {
	Send(*PrimeResponse) error
	grpc.ServerStream
}

type calculatorServicePrimeNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeNumberDecompositionServer) Send(m *PrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).ComputeAverage(&calculatorServiceComputeAverageServer{stream})
}

type CalculatorService_ComputeAverageServer interface {
	SendAndClose(*AvgResponse) error
	Recv() (*AvgRequest, error)
	grpc.ServerStream
}

type calculatorServiceComputeAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceComputeAverageServer) SendAndClose(m *AvgResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceComputeAverageServer) Recv() (*AvgRequest, error) {
	m := new(AvgRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_FindMaximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).FindMaximum(&calculatorServiceFindMaximumServer{stream})
}

type CalculatorService_FindMaximumServer interface {
	Send(*FindMaxResponse) error
	Recv() (*FindMaxRequest, error)
	grpc.ServerStream
}

type calculatorServiceFindMaximumServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceFindMaximumServer) Send(m *FindMaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceFindMaximumServer) Recv() (*FindMaxRequest, error) {
	m := new(FindMaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecomposition",
			Handler:       _CalculatorService_PrimeNumberDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputeAverage",
			Handler:       _CalculatorService_ComputeAverage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FindMaximum",
			Handler:       _CalculatorService_FindMaximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pb/calculator.proto",
}
